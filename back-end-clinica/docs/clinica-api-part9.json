
# EXEMPLOS_REQUISICOES.md


# üì¨ Exemplos de Requisi√ß√µes

## Base URL
```
Local: http://localhost:8000
Produ√ß√£o: https://sua-api.azurewebsites.net
```

## 1. Autentica√ß√£o

### 1.1 Registrar Paciente (P√∫blico)
```http
POST /api/v1/auth/register
Content-Type: application/json

{
  "nome": "Jo√£o Silva",
  "email": "joao@exemplo.com",
  "cpf": "12345678901",
  "password": "Senha@123",
  "role": "PACIENTE"
}
```

**Resposta 201:**
```json
{
  "id": "550e8400-e29b-41d4-a716-446655440000",
  "nome": "Jo√£o Silva",
  "email": "joao@exemplo.com",
  "cpf": "12345678901",
  "role": "PACIENTE",
  "ativo": true,
  "created_at": "2025-01-20T10:00:00Z",
  "updated_at": "2025-01-20T10:00:00Z"
}
```

### 1.2 Login
```http
POST /api/v1/auth/login
Content-Type: application/json

{
  "email": "joao@exemplo.com",
  "password": "Senha@123"
}
```

**Resposta 200:**
```json
{
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "token_type": "bearer"
}
```

### 1.3 Renovar Token
```http
POST /api/v1/auth/refresh
Content-Type: application/json

{
  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}
```

### 1.4 Obter Usu√°rio Atual
```http
GET /api/v1/auth/me
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

## 2. Usu√°rios (Admin)

### 2.1 Criar M√©dico
```http
POST /api/v1/users
Authorization: Bearer <admin_token>
Content-Type: application/json

{
  "nome": "Dr. Carlos Mendes",
  "email": "carlos@clinica.local",
  "cpf": "98765432100",
  "password": "Medico@123",
  "role": "MEDICO"
}
```

### 2.2 Listar Usu√°rios
```http
GET /api/v1/users?page=1&size=20
Authorization: Bearer <admin_token>
```

### 2.3 Atualizar Usu√°rio
```http
PUT /api/v1/users/550e8400-e29b-41d4-a716-446655440000
Authorization: Bearer <admin_token>
Content-Type: application/json

{
  "nome": "Jo√£o Silva Atualizado",
  "ativo": true
}
```

### 2.4 Alterar Senha
```http
PATCH /api/v1/users/550e8400-e29b-41d4-a716-446655440000/password
Authorization: Bearer <user_token>
Content-Type: application/json

{
  "old_password": "Senha@123",
  "new_password": "NovaSenha@456"
}
```

### 2.5 Deletar Usu√°rio
```http
DELETE /api/v1/users/550e8400-e29b-41d4-a716-446655440000
Authorization: Bearer <admin_token>
```

## 3. Perfis

### 3.1 Ver Perfil de Paciente
```http
GET /api/v1/profiles/patient/me
Authorization: Bearer <patient_token>
```

### 3.2 Atualizar Perfil de Paciente
```http
PUT /api/v1/profiles/patient/me
Authorization: Bearer <patient_token>
Content-Type: application/json

{
  "data_nascimento": "1990-05-15",
  "telefone": "(62)99999-9999",
  "endereco": "Rua das Flores, 123"
}
```

### 3.3 Ver Perfil de M√©dico
```http
GET /api/v1/profiles/doctor/me
Authorization: Bearer <doctor_token>
```

### 3.4 Atualizar Perfil de M√©dico
```http
PUT /api/v1/profiles/doctor/me
Authorization: Bearer <doctor_token>
Content-Type: application/json

{
  "crm_crp": "CRP 12/3456",
  "especialidade": "Psicologia Cl√≠nica",
  "bio": "Atendimento adulto, adolescente e casal",
  "valor_padrao_consulta": 280.00
}
```

## 4. M√©dicos (P√∫blico)

### 4.1 Listar M√©dicos
```http
GET /api/v1/doctors?page=1&size=10
```

**Resposta:**
```json
[
  {
    "id": "doctor-id-1",
    "nome": "Dra. Ana Silva",
    "email": "ana.silva@clinica.local",
    "role": "MEDICO",
    "ativo": true
  }
]
```

### 4.2 Ver M√©dico
```http
GET /api/v1/doctors/doctor-id-1
```

### 4.3 Ver Perfil do M√©dico
```http
GET /api/v1/doctors/doctor-id-1/profile
```

**Resposta:**
```json
{
  "id": "profile-id",
  "user_id": "doctor-id-1",
  "crm_crp": "CRP 12/3456",
  "especialidade": "Terapia Cognitivo-Comportamental",
  "bio": "Atendimento adulto",
  "valor_padrao_consulta": 250.00
}
```

## 5. Agenda

### 5.1 Ver Agenda do M√©dico (P√∫blico)
```http
GET /api/v1/doctors/doctor-id-1/agenda?start=2025-01-20T00:00:00Z&end=2025-01-27T23:59:59Z
```

**Resposta:**
```json
[
  {
    "id": "slot-id-1",
    "doctor_id": "doctor-id-1",
    "inicio": "2025-01-21T09:00:00Z",
    "fim": "2025-01-21T10:00:00Z",
    "status": "LIVRE",
    "created_at": "2025-01-20T10:00:00Z"
  }
]
```

### 5.2 Criar Slot (Admin ou M√©dico)
```http
POST /api/v1/doctors/doctor-id-1/agenda/slots
Authorization: Bearer <admin_or_doctor_token>
Content-Type: application/json

{
  "inicio": "2025-01-25T14:00:00Z",
  "fim": "2025-01-25T15:00:00Z"
}
```

### 5.3 Deletar Slot
```http
DELETE /api/v1/agenda/slots/slot-id-1
Authorization: Bearer <admin_or_doctor_token>
```

## 6. Consultas

### 6.1 Agendar Consulta
```http
POST /api/v1/appointments
Authorization: Bearer <patient_token>
Content-Type: application/json

{
  "slot_id": "slot-id-1",
  "observacoes": "Primeira consulta"
}
```

**Resposta 201:**
```json
{
  "id": "appointment-id-1",
  "slot_id": "slot-id-1",
  "patient_id": "patient-id-1",
  "status": "AGENDADA",
  "observacoes": "Primeira consulta",
  "created_at": "2025-01-20T10:00:00Z",
  "updated_at": "2025-01-20T10:00:00Z"
}
```

### 6.2 Listar Consultas
```http
GET /api/v1/appointments?page=1&size=20
Authorization: Bearer <token>
```

### 6.3 Atualizar Status da Consulta
```http
PATCH /api/v1/appointments/appointment-id-1/status
Authorization: Bearer <doctor_or_admin_token>
Content-Type: application/json

{
  "status": "REALIZADA"
}
```

## 7. Pagamentos

### 7.1 Criar Pagamento
```http
POST /api/v1/payments
Authorization: Bearer <patient_token>
Content-Type: application/json

{
  "appointment_id": "appointment-id-1",
  "valor": 250.00,
  "metodo": "CARTAO_FAKE"
}
```

**Resposta 201:**
```json
{
  "id": "payment-id-1",
  "appointment_id": "appointment-id-1",
  "patient_id": "patient-id-1",
  "valor": 250.00,
  "status": "APROVADO",
  "metodo": "CARTAO_FAKE",
  "nsu_fake": "NSU-456789",
  "created_at": "2025-01-20T10:00:00Z"
}
```

### 7.2 Listar Pagamentos
```http
GET /api/v1/payments?page=1&size=20
Authorization: Bearer <token>
```

### 7.3 Ver Pagamento
```http
GET /api/v1/payments/payment-id-1
Authorization: Bearer <token>
```

## 8. Relat√≥rios

### 8.1 Relat√≥rio de Consultas do Paciente
```http
GET /api/v1/reports/patient/appointments?start_date=2025-01-01&end_date=2025-01-31&status=REALIZADA
Authorization: Bearer <patient_token>
```

**Resposta:**
```json
{
  "periodo": "2025-01-01 at√© 2025-01-31",
  "total": 5,
  "agendadas": 1,
  "realizadas": 3,
  "canceladas": 1
}
```

### 8.2 Relat√≥rio de Pagamentos do Paciente
```http
GET /api/v1/reports/patient/payments?start_date=2025-01-01&end_date=2025-01-31
Authorization: Bearer <patient_token>
```

**Resposta:**
```json
{
  "periodo": "2025-01-01 at√© 2025-01-31",
  "total": 3,
  "valor_total": 750.00
}
```

### 8.3 Relat√≥rio de Ocupa√ß√£o do M√©dico
```http
GET /api/v1/reports/doctor/occupancy?start_date=2025-01-01&end_date=2025-01-31
Authorization: Bearer <doctor_token>
```

**Resposta:**
```json
{
  "doctor_id": "doctor-id-1",
  "doctor_nome": "Dra. Ana Silva",
  "total_slots": 20,
  "slots_livres": 5,
  "slots_reservados": 10,
  "slots_concluidos": 5,
  "taxa_ocupacao": 75.0
}
```

### 8.4 Relat√≥rio de Faturamento Mensal (Admin)
```http
GET /api/v1/reports/admin/monthly-revenue?year=2025
Authorization: Bearer <admin_token>
```

**Resposta:**
```json
[
  {
    "mes": "2025-01",
    "total_consultas": 25,
    "valor_total": 6250.00
  },
  {
    "mes": "2025-02",
    "total_consultas": 30,
    "valor_total": 7500.00
  }
]
```

## 9. Dashboard

### 9.1 KPIs do Dashboard
```http
GET /api/v1/dashboard/kpis
Authorization: Bearer <token>
```

**Resposta (Paciente):**
```json
{
  "total_consultas_mes": 3,
  "faturamento_mes": 750.00,
  "taxa_ocupacao": 0.0,
  "proximos_atendimentos": [
    {
      "id": "appointment-id-1",
      "data_hora": "2025-01-25T09:00:00Z",
      "medico": "Dra. Ana Silva"
    }
  ]
}
```

**Resposta (M√©dico):**
```json
{
  "total_consultas_mes": 15,
  "faturamento_mes": 3750.00,
  "taxa_ocupacao": 75.5,
  "proximos_atendimentos": [
    {
      "id": "appointment-id-2",
      "data_hora": "2025-01-25T14:00:00Z",
      "paciente": "Jo√£o Silva"
    }
  ]
}
```

## C√≥digos de Erro Comuns

### 400 Bad Request
```json
{
  "detail": "Email j√° cadastrado",
  "code": "DUPLICATE_EMAIL"
}
```

### 401 Unauthorized
```json
{
  "detail": "Token inv√°lido ou expirado"
}
```

### 403 Forbidden
```json
{
  "detail": "Acesso negado: permiss√£o insuficiente"
}
```

### 404 Not Found
```json
{
  "detail": "Usu√°rio n√£o encontrado"
}
```

### 422 Validation Error
```json
{
  "detail": [
    {
      "loc": ["body", "email"],
      "msg": "value is not a valid email address",
      "type": "value_error.email"
    }
  ]
}
```


# postman_collection.json

{
  "info": {
    "name": "API Cl√≠nica de Psicologia",
    "description": "Cole√ß√£o completa de endpoints da API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register Patient",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nome\": \"Novo Paciente\",\n  \"email\": \"paciente@test.com\",\n  \"cpf\": \"12345678901\",\n  \"password\": \"Test@123\",\n  \"role\": \"PACIENTE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"access_token\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@clinica.local\",\n  \"password\": \"Admin@123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          }
        }
      ]
    }
  ]
}


# TROUBLESHOOTING.md

# üîß Troubleshooting

## Problemas Comuns e Solu√ß√µes

### 1. Erro de Conex√£o com o Banco

**Problema:**
```
sqlalchemy.exc.OperationalError: could not connect to server
```

**Solu√ß√µes:**
- Verifique se o PostgreSQL est√° rodando: `sudo systemctl status postgresql`
- Confirme a string de conex√£o no `.env`
- Teste a conex√£o: `psql -U postgres -d clinica_psicologia`
- Verifique firewall/portas

### 2. Erro de Migrations

**Problema:**
```
alembic.util.exc.CommandError: Can't locate revision identified by 'xxx'
```

**Solu√ß√µes:**
```bash
# Limpar hist√≥rico de migrations
rm alembic/versions/*.py

# Recriar migration
alembic revision --autogenerate -m "Initial"
alembic upgrade head
```

### 3. Token Inv√°lido

**Problema:**
```json
{"detail": "Token inv√°lido ou expirado"}
```

**Solu√ß√µes:**
- Fa√ßa login novamente para obter novo token
- Verifique se o token est√° sendo enviado no header correto
- Confirme que SECRET_KEY n√£o mudou

### 4. CORS Error no Frontend

**Problema:**
```
Access to fetch blocked by CORS policy
```

**Solu√ß√£o:**
Ajuste o CORS no `app/main.py`:
```python
app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:3000"],  # Seu frontend
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
```

### 5. Import Error

**Problema:**
```
ModuleNotFoundError: No module named 'app'
```

**Solu√ß√£o:**
```bash
# Certifique-se de estar no diret√≥rio correto
cd clinica_psicologia

# Ative o ambiente virtual
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate  # Windows

# Reinstale depend√™ncias
pip install -r requirements.txt
```

### 6. Performance Lenta

**Solu√ß√µes:**
- Adicionar √≠ndices nas colunas de busca frequente
- Usar pagina√ß√£o em todas as listagens
- Implementar cache (Redis)
- Otimizar queries com `joinedload`

### 7. Erro ao Criar Slot

**Problema:**
```json
{"detail": "J√° existe um slot neste hor√°rio"}
```

**Causa:**
Sobreposi√ß√£o de hor√°rios

**Solu√ß√£o:**
Verifique hor√°rios existentes antes de criar novo slot

## Debug Mode

Para ativar logs detalhados:

```python
# app/main.py
import logging

logging.basicConfig(level=logging.DEBUG)
```

## Verifica√ß√£o de Sa√∫de

```bash
# Verificar API
curl http://localhost:8000/health

# Verificar banco
psql -U postgres -d clinica_psicologia -c "SELECT 1;"

# Ver logs
tail -f logs/app.log
```
